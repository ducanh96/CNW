@model ShoppingMobile.Models.ModelDB.DienThoai

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    AjaxOptions opt = new AjaxOptions
    {
        UpdateTargetId = "tb",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        LoadingElementId = "loader",
        OnSuccess = "success"
    };
}
<script src="~/Content/ckeditor/ckeditor.js"></script>
<h2>Create</h2>

@using (Html.BeginForm("Create","DienThoais",FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DienThoai</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenDienThoai, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.TenDienThoai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM_ROM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM_ROM, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.RAM_ROM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Camera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Camera, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.Camera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TrangThai)
                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManHinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManHinh, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.ManHinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TSKT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TSKT, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.TSKT, "", new { @class = "text-danger" })
                <script>CKEDITOR.replace("TSKT")</script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnhDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="#" width="195" height="243" id="blah" />
                <input type="file" name="uploadFile" class="form-control1" onchange="readURL(this);"/>
                @Html.ValidationMessageFor(model => model.AnhDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaHDT, "MaHDT", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaHDT", null, htmlAttributes: new { @class = "form-control1" })
                @Html.ValidationMessageFor(model => model.MaHDT, "", new { @class = "text-danger" })
            </div>
         
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a data-toggle="modal" data-target="#myModal" href="#">Thêm mới hãng sản xuất</a>
            </div>
        </div>


       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div class="container">


    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Phần đầu Modal</h4>

                </div>
                @using (Ajax.BeginForm("CreateLoai_SP", opt))
                {

                    <div class="modal-body">

                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label class="control-label col-md-2">Tên loại</label>
                                <div class="col-md-10">
                                    @Html.TextBox("Ten_Loai", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessage("Ten_Loai", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-offset-2 col-md-10" id="tb">

                            </div>
                            <br />
                        </div>


                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>

                    </div>
                    <div id="loader" style="display:none">
                        <div class="center-block">
                            <div class="box box-danger box-solid">
                                <div class="box-header text-center">
                                    <h3 class="box-title danger">Thông báo</h3>
                                </div>
                                <div class="box-body text-center">
                                    Đang xử lý dữ liệu
                                </div>
                                <!-- /.box-body -->
                                <!-- Loading (remove the following to stop the loading)-->
                                <div class="overlay">
                                    <i class="fa fa-refresh fa-spin"></i>
                                </div>
                                <!-- end loading -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>



<script>
function readURL(input) {
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
        $('#blah')
          .attr('src', e.target.result);

    };
    reader.readAsDataURL(input.files[0]);
  }
}
</script>